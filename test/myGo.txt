1.go的变量类型
    整数
    浮点数

2.go的常量
    const 关键字表示一个常数

3.go的循环、if/else，switch

4.go数组
    声明 [个数]类型 
    eg： var arr = [5]int  ｜   var arr = [5]int{1,2,3,4,5}

5. 切片
    切片使用make声明 make([]类型，个数)
    eg：make([]string,3)

    使用applend方法给切片的尾端添加元素,返回值是一个切片，需要一个切片去接返回值
    slice = applend(slice,elem1,elem2,elem3)

    func copy(dst, src []Type) int   copy函数复制一个切片出来

    使用[:]获取切片中的一个片段
    slice[2:5] 指的是 2，3，4 这个片段，不包括5
    slice[2:] 从2开始的片段，最后一个元素结束
    slice[:5] 0到5结束的片段

    切片的二维数组
    twoD := make([][]int, 3)
	for i := 0; i < 3; i++ {
		//Slice 可以组成多维数据结构。内部的 slice 长度可以不一致，这一点和多维数组不同。
		innerLen := i + 1
		twoD[i] = make([]int, innerLen)
		for j := 0; j < innerLen; j++ {
			twoD[i][j] = i + j
		}
	}

6. map 键值对(key-value)
7. range遍历方法
8. 函数
9. 多返回值
10. 变参函数
11. 闭包
12. 递归
13. 指针
14. 字符串和rune类型
15. 结构体
16. 方法
17. 接口
18. embedding
19. 泛型
20. 错误处理
21. 协程
22. 通道
23. 通道缓冲
24. 通道同步
25. 通道方向
26. 通道选择器
27. 超时处理
28. 非阻塞通道操作
29. 通道的关闭
30. 通道的遍历
31. timer
32. ticker
33. 工作池
34. waitGroup
35. 速率限制
36. 原子计数器
37. 互斥锁
38. 状态协程
39. 排序
40. 使用函数自定义排序
41. Panic
42. Defer
43. Recocer
44. 字符串函数
45. 字符串格式化
46. 文本模版
47. 正则表达式
48. json
49. xml
50. 时间
51. 时间戳
52. 时间的格式化和解析
53. 随机数
54. 数字解析
55. url解析
56. sha256散列
57. base64编码
58. 读文件
59. 写文件
60. 行过滤器
61. 文件路径
62. 目录
63. 临时文件和目录
64. 单元测试和基准测试
65. 命令行参数
66. 命令行标志
67. 命令行子命令
68. 环境变量
69. http客户端
70. http服务端
71. context
72. 生成进程
73. 执行进程
74. 信号
75. 退出